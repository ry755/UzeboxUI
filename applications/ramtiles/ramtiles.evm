array8u jump[3];	// empty space so a jump instruction can be inserted by the build script
array8u size[1];	// empty space so the number of sectors can be inserted by the build script

function createWindow(locationX,locationY,sizeX,sizeY,title,titleSize) {
	local i;
	for (i=0; $ptr8u[title, i]; i++)
		$uf0($ptr8u[title, i]);
	$uf1(locationX,locationY,sizeX,sizeY,titleSize);
	$uf0(); // call with no args to reset text buffer
}

function printWindow(locationX,locationY,windowNumber,text,textSize,color) {
	local i;
	for (i=0; $ptr8u[text, i]; i++)
		$uf0($ptr8u[text, i]);
	$uf2(locationX,locationY,windowNumber,textSize,color);
	$uf0(); // call with no args to reset text buffer
}

function setWindowTile(locationX,locationY,windowNumber,tile) {
	$uf5(locationX,locationY,windowNumber,tile);
}

function setWindowRamTile(locationX,locationY,windowNumber,tile) {
	$uf6(locationX,locationY,windowNumber,tile);
}

function plotRamTile(locationX,locationY,ramtile,color) {
	$uf7(locationX,locationY,ramtile,color);
}

function clearWindow(windowNumber,tile) {
	$uf4(windowNumber,tile);
}

function main() {
	local x,y,ramtile,color,num,delay;
	createWindow(5,5,10,10,"Ramtiles",8);
	num = $uf3(); // get window number
	clearWindow(num,0);
	printWindow(0,3,num,"This is",7,1);
	printWindow(0,4,num,"a ramtile",9,1);
	printWindow(0,5,num,"demo",4,1);
	for (delay=175; delay>0; delay--){} // wait for a bit
	clearWindow(num,3);
	setWindowRamTile(1,1,num,0);
	setWindowRamTile(2,1,num,1);
	setWindowRamTile(3,1,num,2);
	setWindowRamTile(1,2,num,3);
	setWindowRamTile(2,2,num,4);
	setWindowRamTile(3,2,num,5);
	setWindowRamTile(1,3,num,6);
	setWindowRamTile(2,3,num,7);
	setWindowRamTile(3,3,num,8);

	while(1) {
		plotRamTile(x,y,ramtile,color);
		
		x++;
		color++;

		if (x > 8) {
			x = 0;
			y++;
		}
		if (y > 8) {
			y = 0;
			ramtile++;
		}
		if (ramtile > 8) {
			x = 0;
			y = 0;
			ramtile = 0;
		}
		if (color == 255) {
			color = 0;
		}
	}
}
